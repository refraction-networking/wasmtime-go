name: CI
on:
  # push:
  #   branches: [main]
  pull_request:
    branches: [main]

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.19.x', '1.20.x', '1.21.x']
    steps:
    - uses: actions/checkout@v2

    # first download wasmtime's last static library build using python
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: python ci/download-wasmtime.py

    # then run our go tests ...
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - run: go vet
    - run: go test
    - run: go test -tags debug
    # - run: go test -tags debug
    #   env:
    #     GODEBUG: cgocheck=2
    #     GOGC: 1
    - name: Test bazel build on *nix
      shell: bash
      run: |
        export GOOS=$(go env GOHOSTOS)
        go get github.com/bazelbuild/bazelisk
        export PATH=$PATH:$(go env GOPATH)/bin
        bazelisk build --subcommands=pretty_print --verbose_failures :go_default_library
        bazelisk test --subcommands=pretty_print --verbose_failures :go_default_test
      if: matrix.os != 'windows-latest'
    - name: Ready msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: git mingw-w64-x86_64-toolchain
        path-type: inherit
      if: matrix.os == 'windows-latest'
    - name: Test bazel build on Windows
      shell: msys2 {0}
      run: |
        go get github.com/bazelbuild/bazelisk
        bazelisk build --subcommands=pretty_print --verbose_failures --compiler=mingw-gcc :go_default_library
        bazelisk test --subcommands=pretty_print --verbose_failures --compiler=mingw-gcc :go_default_test
      if: matrix.os == 'windows-latest'
    - name: Test vendoring on *nix
      shell: bash
      run: ./ci/test-vendoring.sh
      if: matrix.os != 'windows-latest'

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.21'
    # https://stackoverflow.com/questions/42510140/check-format-for-continous-integration
    - run: "diff -u <(echo -n) <(gofmt -d ./)"
